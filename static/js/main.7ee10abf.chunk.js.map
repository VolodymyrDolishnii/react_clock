{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerID","this","window","setInterval","setState","console","log","clearInterval","className","props","clockName","toLocaleTimeString","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","document","addEventListener","_prevProps","prevState","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZN,KAAM,IAAIC,OAIZM,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAfP,kCAkBE,WACEI,OAAOK,cAAcN,KAAKD,WAnB9B,oBAsBE,WACE,OACE,sBAAKQ,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGP,KAAKQ,MAAMC,YAGb,YAED,sBAAMF,UAAU,cAAhB,SACGP,KAAKJ,MAAMC,KAAKa,8BAhC3B,GAA2BC,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVX,UAAWI,KAHf,uDAME,WAAqB,IAAD,OAClBQ,SAASC,iBAAiB,eAAe,WACvC,EAAKnB,SAAS,CAAEiB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEiB,UAAU,OAG5BnB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEM,UAAWI,QAC1B,QAjBP,gCAoBE,SAAmBU,EAAgBC,GAC7BxB,KAAKJ,MAAMwB,UAEbhB,QAAQC,IAAR,uBAA4BmB,EAAUf,UAAtC,eAAsDT,KAAKJ,MAAMa,cAvBvE,oBA2BE,WACE,MAAgCT,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKF,UAAU,MAAf,UACE,6CAEEa,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAlCxC,GAAyBE,IAAMC,WCZ/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.7ee10abf.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerID = 0;\n\n  componentDidMount() {\n    this.timerID = window.setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: State) {\n    if (this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { hasClock && <Clock clockName={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}